xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_shape_manual(values = c("1999-06-08" = 16)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_shape_manual(values = c("1999-06-08" = 16, 14, 14, 14)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 14,
"1998-07-30" = 14,
"1998-08-03" = 14)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 14,
"1998-07-30" = 0,
"1998-08-03" = 3)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 18)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 14)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_color_manual(values = c("1999-06-08" = "red",
"1998-03-12" = "blue",
"1998-07-30" = "orange",
"1998-08-03" = "pink"))
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_color_manual(values = c("1999-06-08" = "red",
"1998-03-12" = "blue",
"1998-07-30" = "orange",
"1998-08-03" = "pink")) =
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_color_manual(values = c("1999-06-08" = "red",
"1998-03-12" = "blue",
"1998-07-30" = "orange",
"1998-08-03" = "pink")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line() +
geom_point() +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(cex = 1) +
geom_point() +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(linewidth = 1) +
geom_point() +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(linewidth = 1) +
geom_point(size = 1) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(linewidth = 3) +
geom_point(size = 1) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(linewidth = 3) +
geom_point(cex = 1) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(linewidth = 0.8) +
geom_point(size = 2) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Diepte (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
dtDiep <- dtData[Meetobject.LokaalID %in% c("RO297DP", "RO297") &
Parametergrootheid.Code %in% c("Cl", "GELDHD", "O2", "pH", "T") &
datum %in% c(as.Date("1998-03-12"), as.Date("1998-07-30"),
as.Date("1998-08-03"), as.Date("1999-06-08")), ]
dtDiep$facet_value <- paste0(dtDiep$Parametergrootheid.Code, " (", dtDiep$Eenheid.Code, ifelse(dtDiep$Hoedanigheid.Code == "NVT", "", paste0(" ", dtDiep$Hoedanigheid.Code)),")")
dtDiep$Date <- as.factor(dtDiep$datum)
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Datum, color = Datum, shape = Datum)) +
geom_line(linewidth = 0.8) +
geom_point(size = 2) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Depth (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Date, color = Date, shape = Date)) +
geom_line(linewidth = 0.8) +
geom_point(size = 2) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Depth (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Date, color = Date, shape = Date)) +
geom_line(linewidth = 0.8) +
geom_point(size = 2) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Depth (m)") +
facet_wrap("facet_value", scales = "free_y") +
theme_classic()
ggplot(dtDiep, aes(x = Begindiepte_m, y = NumeriekeWaarde, group = Date, color = Date, shape = Date)) +
geom_line(linewidth = 0.8) +
geom_point(size = 2) +
scale_color_manual(values = c("1999-06-08" = "#FF6DB6",
"1998-03-12" = "#009292",
"1998-07-30" = "#920000",
"1998-08-03" = "#B66BF6")) +
scale_shape_manual(values = c("1999-06-08" = 16,
"1998-03-12" = 17,
"1998-07-30" = 0,
"1998-08-03" = 4)) +
ylab("") +
xlab("Depth (m)") +
facet_wrap("facet_value", scales = "free_y", ncol = 2) +
theme_classic()
## Inspecting physical and chemical data valkenburgse meer
library(data.table)
library(ggplot2)
library(lubridate)
library(openxlsx)
## set dir and file paths
#dirData2 <- "C:/Users/Lilith Kramer/Documents/PhD/Documenten/_01. Onderzoek/01.05. Ruwe data/20200515_HHvanRijnland_FrankvanSchaik/Valkenburgsemeer/" ## these files come via dunea
dirData <- "C:/Users/LilithK/Documents/PhD/_01. Onderzoek/01.05. Ruwe data/20200702_HHvanRijnland_FrankvanSchaik/"
dirData2 <- "C:/Users/LilithK/Documents/PhD/_01. Onderzoek/01.05. Ruwe data/20200515_HHvanRijnland_FrankvanSchaik/Valkenburgsemeer/"
list.files(dirData)
fnFC <- "Valkenburgseplas.csv"
fnFC2 <- "Valkenburgsemeer_FC.csv" ## bevat 2021 extra waarnemingen, maar ik weet nog niet waarvan. Er zit iig dezelfde lijst parameters in.
## Global settings
options(scipen = 999) ## no scientific notation
## Directory settings
dirHome <- "C:/Users/LilithK/Documents/PCModel/PCModel - work version/Licence_agreement/I_accept/"	# location of the PCModel1350 folder
dirShell <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Models", "PCLake+", "6.13.16", "PCShell")
dirCpp_root <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Frameworks", "Osiris", "3.01", "PCLake_plus")
nameWorkCase <- "PCLakeSplus"
fileDATM <- "PL613162PLUS_PCLakeSplus.xls"
fileXls <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Models", "PCLake+", "6.13.16", fileDATM)
nameWorkCase <- "Temporary"
fileDATM <- "PL613162PLUS_PCLakeSplus.xls"
fileXls <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Models", "PCLake+", "6.13.16", fileDATM)
## Load external functions
source(file.path(dirShell, "scripts", "R_system", "functions_PCLakeSplus.R"))
source(file.path(dirShell, "scripts", "R_system", "functions_PCLake_PCLakeSplus.R"))
## load additional packages
library(plyr)
library(dplyr)
PCModelWorkCaseSetup(dirSHELL = dirShell,
dirCPP_ROOT = dirCpp_root,
nameWORKCASE = nameWorkCase)
## Global settings (optional)
options(scipen = 999) ## turn off scientific notation for small or very large numbers
## Set directories and names
dirHome <- "C:/Users/LilithK/Documents/PCModel/PCModel - work version/Licence_agreement/I_accept/"	## location of the PCModel1350 folder
dirShell <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Models", "PCLake+", "6.13.16", "PCShell")
dirCpp_root <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Frameworks", "Osiris", "3.01", "PCLake_plus")
nameWorkCase <- "PCLakeSplus"
fileDATM <- "PL613162PLUS_Network.xls"
fileXls <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Models", "PCLake+", "6.13.16", fileDATM)
## source helper scripts
source(file.path(dirShell, "scripts", "R_system", "functions.R"))
source(file.path(dirShell, "scripts", "R_system", "functions_PCLake.R"))
## load additional libraries
library(plyr)
## Global settings (optional)
options(scipen = 999) ## turn off scientific notation for small or very large numbers
## Set directories and names
dirHome <- "C:/Users/LilithK/Documents/PCModel/PCModel - official version/Licence_agreement/I_accept/"	## location of the PCModel1350 folder
dirShell <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Models", "PCLake+", "6.13.16", "PCShell") ## location of the PCShell folder
dirCpp_root <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Frameworks", "Osiris", "3.01", "PCLake_plus") ## location of the PCLake C++ files
nameWorkCase <- "PCLakeS_plus_default"
fileDATM <- "PL613162PLUS_Network.xls"
fileXls <- file.path(dirHome, "PCModel1350", "PCModel", "3.00", "Models", "PCLake+", "6.13.16", fileDATM)
## source helper scripts
source(file.path(dirShell, "scripts", "R_system", "functions.R"))
source(file.path(dirShell, "scripts", "R_system", "functions_PCLake.R"))
## load additional libraries
loadPackage("igraph") ## for step 6. (optional)
loadPackage("data.table") ## for step 9 and 10 (saving data)
loadPackage("dplyr") ## for step 10. (select function)
loadPackage("ggplot2") ## for step 10. (plotting)
PCModelWorkCaseSetup(dirSHELL = dirShell,
dirCPP_ROOT = dirCpp_root,
nameWORKCASE = nameWorkCase)
lDATM_SETTINGS <- PCModelReadDATMFile_PCLakeSplus(fileXLS = fileXls,
locFORCING = 'excel')
## For example, change the sediment settings of each lake
lDATM_SETTINGS$params$sSet0 <- adjustSedimentParamSettings_PCLakeSplus(lDATM_SETTINGS$params, "sSet0", sediment_type = "peat")
lDATM_SETTINGS$params$sSet1 <- adjustSedimentParamSettings_Rnet(lDATM_SETTINGS$params, "sSet1", sediment_type = "sand")
lDATM_SETTINGS$params$sSet2 <- adjustSedimentParamSettings_Rnet(lDATM_SETTINGS$params, "sSet2", sediment_type = "clay_peat")
lDATM_SETTINGS$params$sSet3 <- adjustSedimentParamSettings_Rnet(lDATM_SETTINGS$params, "sSet3", sediment_type = "peat")
lDATM_SETTINGS$params$sSet4 <- adjustSedimentParamSettings_Rnet(lDATM_SETTINGS$params, "sSet4", sediment_type = "clay_peat")
## Define the network
dfNetwork <- data.frame(node_nr_from = c(0, 0, 1, 2, 3), ## The node numbers are based on the iRuniD's in the Excel sheet of PCLakeS+
node_nr_to  = c(1, 2, 3, 3, 4), ## The node numbers are based on the iRuniD's in the Excel sheet of PCLakeS+
fraction   = c(0.3, 0.7, 1, 1, 1))
## Define the lakes
dfNodes <- data.frame(node_nr = c(0, 1, 2, 3, 4), ## The node numbers are based on the iRuniD's in the Excel sheet of PCLakeS+
node_name = c("Lake A", "Lake B", "Lake C", "Lake D", "Lake E"), ## This column is present for convenience, it is not used by the functions to run the model
surface_area  = c(1, 2, 1, 1, 1), ## (relative) surface areas of each lake
lat = c(0, 1, 1, 2, 3), ## This column is present for convenience, it is used to plot the nodes
lon = c(2, 2.5, 1, 2, 1.5)) ## This column is present for convenience, it is used to plot the nodes
## Build a forcing list from the fractions
dfNetwork$param_names <- paste0("mFracN", dfNetwork$node_nr_from, "N", dfNetwork$node_nr_to)
dfNetwork$value <- dfNetwork$fraction
lFracForc <- sapply(dfNetwork$param_names,
getForcingAndInterpolate,
location = "excel",
pathLoc = fileXls,
metadata = dfNetwork,
timesteps = seq(0, 365*lDATM_SETTINGS[["run_settings"]]["dReady", "Set0"]),
simplify = F)
## Define the substances that will be transported
##  In normal runs the transportable substances should be all substances that are (passively) transportable by water
##  For regular use, this table should not be adjusted.
##  This data frame contains three columns
##   - loads: the names of the substances when they enter the system as loads
##   - outflow: the names of the substances when they flow out of the system
##   - tran_subst: the names of the substances in the transport formulas
tran_subst <- data.frame(loads = c("uPLoadPO4Epi", "uPLoadAIMEpi", "uPLoadGrenEpi", "uPLoadDiatEpi", "uPLoadBlueEpi", "uPLoadDetEpi", "uPLoadZooEpi",
"uNLoadNH4Epi", "uNLoadNO3Epi", "uNLoadGrenEpi", "uNLoadDiatEpi", "uNLoadBlueEpi", "uNLoadDetEpi", "uNLoadZooEpi",
"uDLoadDetEpi", "uDLoadIMEpi", "uDLoadGrenEpi", "uDLoadDiatEpi", "uDLoadBlueEpi", "uDLoadZooEpi",
"uSiLoadSiO2Epi", "uSiLoadDetEpi",
"uO2LoadEpi",
"uPLoadPO4Hyp", "uPLoadAIMHyp", "uPLoadGrenHyp", "uPLoadDiatHyp", "uPLoadBlueHyp", "uPLoadDetHyp", "uPLoadZooHyp",
"uNLoadNH4Hyp", "uNLoadNO3Hyp", "uNLoadGrenHyp", "uNLoadDiatHyp", "uNLoadBlueHyp", "uNLoadDetHyp", "uNLoadZooHyp",
"uDLoadDetHyp", "uDLoadIMHyp", "uDLoadGrenHyp", "uDLoadDiatHyp", "uDLoadBlueHyp", "uDLoadZooHyp",
"uSiLoadSiO2Hyp", "uSiLoadDetHyp",
"uO2LoadHyp"),
outflow = c("wPDilPO4Epi", "wPDilAIMEpi", "wPDilGrenEpi", "wPDilDiatEpi", "wPDilBlueEpi", "wPDilDetEpi", "wPDilZooEpi",
"wNDilNH4Epi", "wNDilNO3Epi", "wNDilGrenEpi", "wNDilDiatEpi", "wNDilBlueEpi", "wNDilDetEpi", "wNDilZooEpi",
"wDDilDetEpi", "wDDilIMEpi", "wDDilGrenEpi", "wDDilDiatEpi", "wDDilBlueEpi", "wDDilZooEpi",
"wSiDilSiO2Epi", "wSiDilDetEpi",
"wO2OutflEpi",
"wPDilPO4Hyp", "wPDilAIMHyp", "wPDilGrenHyp", "wPDilDiatHyp", "wPDilBlueHyp", "wPDilDetHyp", "wPDilZooHyp",
"wNDilNH4Hyp", "wNDilNO3Hyp", "wNDilGrenHyp", "wNDilDiatHyp", "wNDilBlueHyp", "wNDilDetHyp", "wNDilZooHyp",
"wDDilDetHyp", "wDDilIMHyp", "wDDilGrenHyp", "wDDilDiatHyp", "wDDilBlueHyp", "wDDilZooHyp",
"wSiDilSiO2Hyp", "wSiDilDetHyp",
"wO2OutflHyp"),
tran_subst = c("wPTranPO4WEpi", "wPTranAIMWEpi", "wPTranGrenEpi", "wPTranDiatEpi", "wPTranBlueEpi", "wPTranDetWEpi", "wPTranZooEpi",
"wNTranNH4WEpi", "wNTranNO3WEpi", "wNTranGrenEpi", "wNTranDiatEpi", "wNTranBlueEpi", "wNTranDetWEpi", "wNTranZooEpi",
"wDTranDetWEpi", "wDTranIMWEpi", "wDTranGrenEpi", "wDTranDiatEpi", "wDTranBlueEpi", "wDTranZooEpi",
"wSiTranSiO2Epi", "wSiTranDetWEpi",
"wO2TranWEpi",
"wPTranPO4WHyp", "wPTranAIMWHyp", "wPTranGrenHyp", "wPTranDiatHyp", "wPTranBlueHyp", "wPTranDetWHyp", "wPTranZooHyp",
"wNTranNH4WHyp", "wNTranNO3WHyp", "wNTranGrenHyp", "wNTranDiatHyp", "wNTranBlueHyp", "wNTranDetWHyp", "wNTranZooHyp",
"wDTranDetWHyp", "wDTranIMWHyp", "wDTranGrenHyp", "wDTranDiatHyp", "wDTranBlueHyp", "wDTranZooHyp",
"wSiTranSiO2Hyp", "wSiTranDetWHyp",
"wO2TranWHyp"))
## create an igraph network
network_igraph <- graph.data.frame(d = dfNetwork,
vertices = dfNodes,
directed = T)
## adjust elements of the network
V(network_igraph)$size <-V(network_igraph)$surface_area * 20
V(network_igraph)$latitude <- dfNodes$lat[match(V(network_igraph)$name, dfNodes$node_nr)]
V(network_igraph)$longitude <- dfNodes$lon[match(V(network_igraph)$name, dfNodes$node_nr)]
location <- matrix(c(V(network_igraph)$latitude, V(network_igraph)$longitude), ncol = 2)
E(network_igraph)$edge.color <- "gray80"
E(network_igraph)$weight  <- E(network_igraph)$fraction * 100
## plot the network
plot(network_igraph,
edge.curved = .1,
vertex.color="lightblue",
vertex.frame.color="#ffffff",
edge.width = E(network_igraph)$fraction * 5,
#layout=layout.grid,
layout = location,
rescale = F, #asp = 0,
xlim = range(V(network_igraph)$lat),
ylim = range(V(network_igraph)$lon),
vertex.label.color="black",
edge.color = "#6599FF",
edge.label = dfNetwork$fraction,
edge.label.color = "black",
edge.label.cex = 0.8) # vertex.label=V(network_igraph)$box_name
PCModelAdjustlDATMandCPPfiles_PCLakeSplus(dirSHELL = dirShell,
nameWORKCASE = nameWorkCase,
dfNODES = dfNodes,
dfNETWORK = dfNetwork,
dfSUBST = tran_subst,
lDATM = lDATM_SETTINGS)
## During compilation the adjusted cpp files will be converted into a dll file.
## Depending on the size of the model (>15 nodes) this step can require large amounts of computer memory (>15Gb).
PCModelCompileModelWorkCase(dirSHELL = dirShell,
nameWORKCASE = nameWorkCase)
## Note: Initialization happens inside the function
results <- PCModelNetworkRun(lDATM = lDATM_SETTINGS,
dfNETWORK = dfNetwork,
lFRACFORC = lFracForc,
dirSHELL = dirShell,
dfSUBST = tran_subst,
integrator_method = "rk45ck",
nameWORKCASE = nameWorkCase)
## save the output
data.table::fwrite(results$output,
file = file.path(dirShell, "work_cases", nameWorkCase, "output", "results.txt"))
## colors for the lakes
colors <- c("N0" = "#CD534CFF",
"N1" = "#8F7700FF",
"N2" = "#003C67FF",
"N3" = "#0073C2FF",
"N4" = "#7AA6DCFF")
## labels
variable_names <- c(`oChlaEpi` = "Chlorophyll-a~summer~avg~{}(mg%*%m^-3)",
`sDVeg` = "Submerged~macrophyte~summer~avg~{}(gDW%*%m^-2)")
## convert output from the model into something that is easy to use with ggplot
output_long <- results$output %>%
dplyr::select(colnames(results$output)[grep("oChlaEpiN|sDVegN|time", colnames(results$output))]) %>%
pivot_longer(cols = colnames(results$output)[grep("oChlaEpiN|sDVegN", colnames(results$output))],
names_to = "type",
values_to = "values") %>%
separate(type, into = c("parameter", "node"), -2)
## plot the data
plot <- ggplot(data = output_long, aes(time, values, col = node)) +
geom_line(linewidth = 1) +
scale_color_manual(values = colors, name = "Lake") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, NA)) +
scale_x_continuous(expand = c(0, 0),
limits = c(0.0, NA)) +
theme_classic() +
ylab("") +
xlab("Tot. P load to N0 ("~gP%*%m^-2%*%d^-1~")") +
facet_grid("parameter", scales = "free_y", labeller = as_labeller(variable_names, label_parsed)) +
theme(strip.background = element_rect(fill = "lightgrey", colour = "lightgrey"))
plot
## save the plot
ggsave(file.path(dirShell, "work_cases", nameWorkCase, "output", "plot.png"),
width = 7.76, height = 6.51,
type = "cairo",
plot)
